Yes, you can track the **vMotion activity from vCenter tasks** and use this information to reverse the migration back to the original hosts. VMware vCenter logs every task, including **vMotion** operations, and you can leverage **PowerCLI** to retrieve the vMotion tasks and extract the relevant details such as the **source host**, **destination host**, and **timestamp**.

Hereâ€™s how you can achieve this:

### 1. **Tracking vMotion Tasks in vCenter:**

You can query the **vCenter task history** using PowerCLI to identify **vMotion operations**. These tasks will include information such as:
- **VM name**
- **Source host** (from where the VM was migrated)
- **Destination host** (where the VM was moved)

### 2. **PowerCLI Script to Retrieve vMotion Tasks:**

You can retrieve vMotion tasks and store the original host information to reverse the vMotion later. Here's an example of how to do this:

#### Step 1: Connect to vCenter
```powershell
# Connect to vCenter
Connect-VIServer -Server "vcenter.example.com" -User "yourusername" -Password "yourpassword"
```

#### Step 2: Retrieve vMotion Tasks and Save Original Hosts

```powershell
# Define a file to save original VM location info
$originalLocationFile = "C:\vm_original_hosts_from_tasks.csv"

# Get vMotion tasks from vCenter within a specified time frame (e.g., past 24 hours)
$vMotionTasks = Get-Task | Where-Object {
    $_.Name -eq "MigrateVM" -and $_.State -eq "success" -and $_.StartTime -ge (Get-Date).AddHours(-24)
}

# Create a list to store original VM host information
$originalLocations = @()

foreach ($task in $vMotionTasks) {
    $vm = Get-VM -Id $task.Entity.Id
    $sourceHost = $task.Info.DescriptionId # This should reflect the host migration

    # Get original source and destination hosts from the task details
    $taskInfo = $task | Select-Object -ExpandProperty Info
    $sourceHost = (Get-View $taskInfo.Source).Name
    $destinationHost = (Get-View $taskInfo.Destination).Name

    # Record the original host before the migration
    $originalLocations += New-Object PSObject -Property @{
        VMName = $vm.Name
        OriginalHost = $sourceHost
        CurrentHost = $destinationHost
    }
}

# Save the VM original locations to a CSV file
$originalLocations | Export-Csv -Path $originalLocationFile -NoTypeInformation
```

### Key Points in the Script:
- **Get-Task**: Retrieves the list of tasks from vCenter, filtered by `MigrateVM` to identify vMotion tasks.
- **Task Filtering**: The script filters tasks for the **past 24 hours** (or another specified time frame) and only **successful** migrations.
- **Original Host Information**: By extracting the **Source** and **Destination** details from each task, you record the original host information before the vMotion.
- **CSV Output**: The VM names and original hosts are saved in a CSV file for later use during the reverse migration.

### 3. **Reversing vMotion Using Tracked Information:**

Once the DR test is completed, you can reverse the vMotion using the CSV file that contains the original host information retrieved from the vMotion tasks.

```powershell
# Load the original VM locations from CSV
$originalLocationFile = "C:\vm_original_hosts_from_tasks.csv"
$vmLocations = Import-Csv -Path $originalLocationFile

foreach ($vmLocation in $vmLocations) {
    # Get the VM and its original host
    $vm = Get-VM -Name $vmLocation.VMName
    $originalHost = Get-VMHost -Name $vmLocation.OriginalHost

    # Perform vMotion back to the original host
    Move-VM -VM $vm -Destination $originalHost
}
```

### 4. **Detailed Explanation**:
- **Tracking vMotion Tasks**: This script tracks all successful **vMotion (MigrateVM)** tasks from the vCenter **task history**.
- **Source and Destination Hosts**: The `Info` property from the task contains both the source and destination host details, which allows you to know where the VM originally resided.
- **CSV Storage**: The original and destination host information is saved into a CSV file, which can be used later to reverse the migration.
  
### 5. **Other Considerations**:
- **Task Retention**: Ensure that your **vCenter task retention** is set up appropriately so that you don't lose the task history for vMotions that were performed earlier. By default, vCenter may not store tasks for very long, so verify your **task and event retention policy** under **vCenter Settings**.
- **Rollback of Datastore Migrations**: If your vMotion included datastore changes (Storage vMotion), ensure that you capture that information as well and include it in the reverse process by specifying the correct datastore in `Move-VM`.

### Final Notes:
This method provides a reliable way to reverse a vMotion activity based on actual task history, ensuring that VMs can be migrated back to their original hosts automatically without needing manual tracking.
