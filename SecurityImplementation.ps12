
# Connecting to the vCenter Server
$vCenterServer = "ch-sv01993.group.intra"
$LoginUser = "adm_alpa@group.intra"


Connect-VIServer -Server $vCenterServer 

# List of clusters to apply the settings
$clusters = @("DEVVDI","TSTDMZECOM","SINGAPORETSTGITS","TSTATP","TSTINTWIN","TSTDMZ","CORE BANKING COMPONENTS","WEALTH-SQL-UAT-SEC","UNBLU-PRD","DMZLX","DMZINFRA","WEALTH-SQL-PRD","ELK","VAULT","NETWORK","DLP","IDM","DMZGITS","DMZECOM","UNBLU-UAT","INTWIN","DMZTRAD","DMZGITS-VDI","DMZWINCORE","SECURITY","INTDW","INTLX-Stage","INTLX","DMZWIN","HID-CL")  # Replace with your cluster names

# Log file location
$logFile = "C:\VMHostSettingsLog.txt"

# Loop through each cluster
foreach ($clusterName in $clusters) {
    Write-Host "Processing cluster: $clusterName"
    
    # Get all hosts in the current cluster
    $vmHosts = Get-Cluster -Name $clusterName | Get-VMHost
    
    foreach ($vmHost in $vmHosts) {
        Write-Host "Configuring host: $($vmHost.Name)"
        Add-Content -Path $logFile -Value "Configuring host: $($vmHost.Name) in cluster: $clusterName"

        # Define a hashtable of settings to apply
        $settings = @{
            "Security.AccountUnlockTime" = 900
            "Security.AccountLockFailures" = 3
            "Security.PasswordHistory" = 5
            "Security.PasswordQualityControl" = "similar=deny retry=3 min=disabled,disabled,disabled,14,14"
            "UserVars.DcuiTimeOut" = 600
            "UserVars.ESXiShellInteractiveTimeOut" = 600
            "UserVars.ESXiShellTimeOut" = 600
            "UserVars.SuppressShellWarning" = 0
            "Syslog.global.logHost" = "udp://160.219.63.155:514"
        }
        
        # Apply each setting
        foreach ($setting in $settings.GetEnumerator()) {
            $advancedSetting = $vmHost | Get-AdvancedSetting -Name $setting.Key
            $advancedSetting | Set-AdvancedSetting -Value $setting.Value -Confirm:$false
            Add-Content -Path $logFile -Value "Set $($setting.Key) to $($setting.Value) on $($vmHost.Name)"
        }
        
        # vSwitch Security Settings
        $vmHost | Get-VirtualSwitch -Standard | Get-SecurityPolicy | Set-SecurityPolicy -ForgedTransmits $false -Confirm:$false
        Add-Content -Path $logFile -Value "Set ForgedTransmits to $false on virtual switches of $($vmHost.Name)"
        
        $vmHost | Get-VirtualPortGroup -Standard | Get-SecurityPolicy | Set-SecurityPolicy -ForgedTransmitsInherited $true -Confirm:$false
        Add-Content -Path $logFile -Value "Set ForgedTransmitsInherited to $true on virtual port groups of $($vmHost.Name)"
    }
}

# Disconnect from vCenter Server
Disconnect-ViServer -Server $vCenterServer -Confirm:$false

Write-Host "Configuration complete. Logs can be found at $logFile"


# Importing the PowerCLI module
Import-Module VMware.PowerCLI

# Connecting to the vCenter Server
$vCenterServer = "ch-sv01993.group.intra"
$LoginUser = "your-username"
$LoginPassword = "your-password"

Connect-ViServer -Server $vCenterServer -User $LoginUser -Password $LoginPassword

# List of clusters to apply the settings
$clusters = @("Cluster1", "Cluster2", "Cluster3")  # Replace with your cluster names

# Log file location
$logFile = "C:\VMHostSettingsLog.txt"

# Loop through each cluster
foreach ($clusterName in $clusters) {
    Write-Host "Processing cluster: $clusterName"
    
    # Get all hosts in the current cluster
    $vmHosts = Get-Cluster -Name $clusterName | Get-VMHost
    
    foreach ($vmHost in $vmHosts) {
        Write-Host "Configuring host: $($vmHost.Name)"
        Add-Content -Path $logFile -Value "Configuring host: $($vmHost.Name) in cluster: $clusterName"

        # Define a hashtable of settings to apply
        $settings = @{
            "Security.AccountUnlockTime" = 900
            "Security.AccountLockFailures" = 3
            "Security.PasswordHistory" = 5
            "Security.PasswordQualityControl" = "similar=deny retry=3 min=disabled,disabled,disabled,14,14"
            "UserVars.SuppressHyperthreadWarning" = 0
            "UserVars.DcuiTimeOut" = 600
            "UserVars.ESXiShellInteractiveTimeOut" = 600
            "UserVars.ESXiShellTimeOut" = 600
            "Net.BlockGuestBPDU" = 1
            "UserVars.SuppressShellWarning" = 0
            "Syslog.global.logHost" = "udp://160.219.63.155:514"
        }
        
        # Apply each setting
        foreach ($setting in $settings.GetEnumerator()) {
            $advancedSetting = $vmHost | Get-AdvancedSetting -Name $setting.Key
            $advancedSetting | Set-AdvancedSetting -Value $setting.Value -Confirm:$false
            Add-Content -Path $logFile -Value "Set $($setting.Key) to $($setting.Value) on $($vmHost.Name)"
        }
        
        # vSwitch Security Settings for all standard switches
        $vmHost | Get-VirtualSwitch -Standard | Get-SecurityPolicy | Set-SecurityPolicy -AllowMacChanges $false -Confirm:$false
        Add-Content -Path $logFile -Value "Set MAC Address Changes to $false on standard virtual switches of $($vmHost.Name)"
    }
}

# Disconnect from vCenter Server
Disconnect-ViServer -Server $vCenterServer -Confirm:$false

Write-Host "Configuration complete. Logs can be found at $logFile"


# Importing the PowerCLI module
Import-Module VMware.PowerCLI

# Connecting to the vCenter Server
$vCenterServer = "ch-sv01993.group.intra"
$LoginUser = "your-username"
$LoginPassword = "your-password"

Connect-ViServer -Server $vCenterServer -User $LoginUser -Password $LoginPassword

# List of ESXi hosts to apply the MAC Address Changes setting
$esxiHosts = @(
    "esxi-host1.domain.com",
    "esxi-host2.domain.com",
    "esxi-host3.domain.com"
)  # Replace with your ESXi host names

# Log file location
$logFile = "C:\VMHostSettingsLog.txt"

# Loop through each ESXi host
foreach ($esxiHost in $esxiHosts) {
    Write-Host "Configuring MAC Address Changes policy for host: $esxiHost"
    Add-Content -Path $logFile -Value "Configuring MAC Address Changes policy for host: $esxiHost"

    # Get the host system object
    $vmHost = Get-VMHost -Name $esxiHost
    
    if ($vmHost) {
        # vSwitch Security Settings for all standard switches
        $vmHost | Get-VirtualSwitch -Standard | Get-SecurityPolicy | Set-SecurityPolicy -AllowMacChanges $false -Confirm:$false
        Add-Content -Path $logFile -Value "Set MAC Address Changes to $false on standard virtual switches of $esxiHost"
    } else {
        Write-Host "ESXi host $esxiHost not found."
        Add-Content -Path $logFile -Value "ESXi host $esxiHost not found."
    }
}

# Disconnect from vCenter Server
Disconnect-ViServer -Server $vCenterServer -Confirm:$false

Write-Host "Configuration complete. Logs can be found at $logFile"


# Importing the PowerCLI module
Import-Module VMware.PowerCLI

# Connecting to the vCenter Server
$vCenterServer = "your-vcenter-server"
$LoginUser = "your-username"
$LoginPassword = "your-password"

# Connect to vCenter
Connect-ViServer -Server $vCenterServer -User $LoginUser -Password $LoginPassword

# List of datastore names to retrieve NAA IDs
$datastoreNames = @("Datastore1", "Datastore2", "Datastore3")  # Replace with your datastore names

# Loop through each datastore name
foreach ($datastoreName in $datastoreNames) {
    # Get the datastore object
    $datastore = Get-Datastore -Name $datastoreName -ErrorAction SilentlyContinue
    
    if ($datastore) {
        # Get the canonical name (NAA ID) of the datastore
        $naaID = ($datastore.ExtensionData.Info.Vmfs.Extent | Select-Object -First 1).DiskName
        Write-Host "Datastore: $datastoreName, NAA ID: $naaID"
    } else {
        Write-Host "Datastore: $datastoreName not found"
    }
}

# Disconnect from vCenter
Disconnect-ViServer -Server $vCenterServer -Confirm:$false
